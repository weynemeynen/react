{"version":3,"sources":["components/AppHeader/index.jsx","components/ItemStatusFilter/index.jsx","components/SearchPanel/index.jsx","components/Todo/index.jsx","components/TodoList/index.jsx","components/TodoPanel/index.jsx","components/App.jsx","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","ItemStatusFilter","state","filter","buttons","name","text","_this$props","this","props","onFilterChange","map","cls","Fragment","key","type","concat","id","autoComplete","onClick","htmlFor","React","Component","SearchPAnel","term","onSearchChange","event","target","value","_this","setState","placeholder","onChange","ItemStatusFilter_ItemStatusFilter","Todo","important","label","onDeleted","onToggleImportant","onToggleDone","role","index_esm","size","TodoList","todos","items","item","itemProps","Object","objectWithoutProperties","assign","onLabelChange","onSubmit","preventDefault","addTodo","clear","disabled","App","nextId","todoData","createTodoItem","deleteItem","newItem","_ref2","newTodoData","slice","push","_ref3","toggleProperty","_ref4","search","length","toLowerCase","indexOf","arr","propName","idx","findIndex","el","oldItem","objectSpread","defineProperty","toConsumableArray","_this$state","visibleItems","doneCount","todoCount","SearchPanel_SearchPAnel","visible","TodoPanel_default","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7b168847.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default ({toDo, done}) => {\r\n  return (\r\n    <div className='d-flex justify-content-between align-items-baseline mb-4'>\r\n      <h2 className='fs-4'>Список дел</h2>\r\n      <small className='text-muted fs-6'>\r\n        {toDo} сделать,&nbsp;\r\n        {done} сделано\r\n      </small>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default class ItemStatusFilter extends React.Component {\r\n  state = {\r\n    filter: ''\r\n  }\r\n\r\n  buttons = [\r\n    {name: 'all', text: 'Все'},\r\n    {name: 'active', text: 'активные'},\r\n    {name: 'done', text: 'сделано'}\r\n  ]\r\n\r\n  render() {\r\n    const {filter, onFilterChange} = this.props\r\n\r\n    return this.buttons.map(({name, text}) => {\r\n      const isActive = filter === name\r\n      const cls = isActive ? 'active' : ''\r\n      return (\r\n        <React.Fragment key={name}>\r\n          <input\r\n            type='radio'\r\n            className={`btn-check ${cls}`}\r\n            name='btnradio'\r\n            id={name}\r\n            autoComplete='off'\r\n            onClick={() => onFilterChange(name)}\r\n          />\r\n          <label className='btn btn-outline-secondary' htmlFor={name}>\r\n            {text}\r\n          </label>\r\n        </React.Fragment>\r\n      )\r\n    })\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport ItemStatusFilter from '../ItemStatusFilter'\r\n\r\nexport default class SearchPAnel extends Component {\r\n  state = {\r\n    term: ''\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    const term = event.target.value\r\n    this.setState({term})\r\n    this.props.onSearchChange(term)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='input-group mb-3'>\r\n        <input\r\n          className='form-control'\r\n          placeholder='поиск'\r\n          value={this.state.value}\r\n          onChange={this.onSearchChange}\r\n        />\r\n        <ItemStatusFilter\r\n          filter={this.props.filter}\r\n          onFilterChange={this.props.onFilterChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {BsTrash, BsExclamation} from 'react-icons/bs'\r\n\r\nexport default ({\r\n  done,\r\n  important,\r\n  label,\r\n  onDeleted,\r\n  onToggleImportant,\r\n  onToggleDone\r\n}) => {\r\n  let className = 'me-auto'\r\n  if (done) {\r\n    className += ' text-decoration-line-through fw-bold'\r\n  }\r\n  if (important) className += ' fw-bold'\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <span className={className} role='button' onClick={onToggleDone}>\r\n        {label}\r\n      </span>\r\n      <div className='btn-group btn-group-sm' role='group'>\r\n        <button\r\n          type='button'\r\n          className='btn btn-outline-success'\r\n          onClick={onToggleImportant}\r\n        >\r\n          <BsExclamation />\r\n        </button>\r\n        <button\r\n          type='button'\r\n          className='btn btn-outline-danger'\r\n          onClick={onDeleted}\r\n        >\r\n          <BsTrash size={16} />\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Todo from '../Todo'\r\n\r\nexport default (props) => {\r\n  const {todos, onDeleted, onToggleDone, onToggleImportant} = props\r\n\r\n  const items = todos.map((item) => {\r\n    let {id, ...itemProps} = item\r\n\r\n    return (\r\n      <li\r\n        key={id}\r\n        className='list-group-item list-group-item-action d-flex align-items-center'\r\n      >\r\n        <Todo\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n        />\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return <ul className='list-group list-group-flush mb-3'>{items}</ul>\r\n}\r\n","import React, {Component} from 'react'\r\n\r\nexport default class extends Component {\r\n  state = {\r\n    label: ''\r\n  }\r\n\r\n  onLabelChange = (event) => {\r\n    this.setState({\r\n      label: event.target.value\r\n    })\r\n  }\r\n\r\n  clear() {\r\n    this.setState({\r\n      label: ''\r\n    })\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault()\r\n    if (this.state.label !== '') {\r\n      this.props.addTodo(this.state.label)\r\n      this.clear()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className='input-group mb-3'>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='укажите дело'\r\n            onChange={this.onLabelChange}\r\n            value={this.state.label}\r\n          />\r\n          <button\r\n            type='submit'\r\n            className='btn btn-outline-secondary'\r\n            disabled={!this.state.label}\r\n          >\r\n            добавить дело\r\n          </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport AppHeader from './AppHeader'\r\nimport SearchPanel from './SearchPanel'\r\nimport TodoList from './TodoList'\r\nimport TodoPanel from './TodoPanel'\r\n\r\nexport default class App extends React.Component {\r\n  nextId = 0\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('сходить в туалет'),\r\n      this.createTodoItem('позавтракать'),\r\n      this.createTodoItem('пообедать'),\r\n      this.createTodoItem('поспать'),\r\n      this.createTodoItem('сходить в туалет'),\r\n      this.createTodoItem('поужинать'),\r\n      this.createTodoItem('поспать')\r\n    ],\r\n    term: '',\r\n    filter: 'all' // all/active/done\r\n  }\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: ++this.nextId\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({todoData}) => {\r\n      // главный принцип - не измеенять текущий state, а возвращать новый!\r\n\r\n      // вариант-1\r\n      // const idx = todoData.findIndex((el) => el.id === id);\r\n      // const newTodoData = [\r\n      //     ...todoData.slice(0, idx),\r\n      //     ...todoData.slice(idx + 1)\r\n      // ];\r\n\r\n      // вариант-2\r\n      // const newTodoData = [...todoData]\r\n      // const item = newTodoData.findIndex((item) => item.id === id)\r\n      // newTodoData.splice(item, 1)\r\n\r\n      return {\r\n        // todoData: newTodoData\r\n        todoData: todoData.filter((item) => item.id !== id)\r\n      }\r\n    })\r\n  }\r\n\r\n  addTodo = (text) => {\r\n    const newItem = this.createTodoItem(text)\r\n    // add element in newTodoData\r\n    this.setState(({todoData}) => {\r\n      /**\r\n       *  Вариант-1\r\n       */\r\n      // добавить в конец массива\r\n      /* const newTodoData = [...todoData, newItem]; */\r\n      // добавить в начало массива\r\n      /* const newTodoData = [newItem, ...todoData]; */\r\n\r\n      /**\r\n       * Вариант-2 (мой)\r\n       */\r\n      const newTodoData = todoData.slice()\r\n      newTodoData.push(newItem)\r\n      return {\r\n        todoData: newTodoData\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    // 1. определить id эелемента\r\n    const idx = arr.findIndex((el) => el.id === id)\r\n    // 2. оновить нужный объект по (id) в массиве\r\n    const oldItem = arr[idx]\r\n    const newItem = {...oldItem, [propName]: !oldItem[propName]}\r\n    // 3. сконструировать вернуть новый массив\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)]\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      }\r\n    })\r\n  }\r\n  onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      }\r\n    })\r\n  }\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({term})\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({filter})\r\n  }\r\n\r\n  search = (items, term) => {\r\n    if (term.length === 0) return items\r\n    return items.filter(\r\n      (item) => item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n    )\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items\r\n      case 'active':\r\n        return items.filter((item) => !item.done)\r\n      case 'done':\r\n        return items.filter((item) => item.done)\r\n      default:\r\n        return items\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {todoData, term, filter} = this.state\r\n    const visibleItems = this.filter(this.search(todoData, term), filter)\r\n    const doneCount = todoData.filter((el) => el.done).length\r\n    const todoCount = todoData.length - doneCount\r\n\r\n    return (\r\n      <div className='container my-5'>\r\n        <div className='row'>\r\n          <div className='col-lg-6 col-md-7 col-sm-9 col-xl-5 col-xxl-4 mx-auto'>\r\n            <AppHeader toDo={todoCount} done={doneCount} />\r\n            <SearchPanel\r\n              onSearchChange={this.onSearchChange}\r\n              filter={this.state.filter}\r\n              onFilterChange={this.onFilterChange}\r\n            />\r\n            <TodoList\r\n              todos={visibleItems}\r\n              onDeleted={this.deleteItem}\r\n              onToggleDone={this.onToggleDone}\r\n              onToggleImportant={this.onToggleImportant}\r\n              visible={this.state.visible}\r\n            />\r\n            <TodoPanel addTodo={this.addTodo} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}