{"version":3,"sources":["components/AppHeader/index.jsx","components/ItemStatusFilter/index.jsx","components/SearchPanel/index.jsx","components/Todo/index.jsx","components/TodoList/index.jsx","components/TodoPanel/index.jsx","components/App.jsx","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","ItemStatusFilter","state","filter","buttons","name","text","_this$props","this","props","onFilterChange","map","cls","key","type","concat","onClick","React","Component","SearchPAnel","term","onSearchChange","event","target","value","_this","setState","placeholder","onChange","ItemStatusFilter_ItemStatusFilter","components_Todo","important","label","onDeleted","onToggleImportant","onToggleDone","Fragment","index_esm","size","components_TodoList","todos","items","item","id","itemProps","Object","objectWithoutProperties","assign","onLabelChange","onSubmit","preventDefault","addTodo","App","nextId","todoData","createTodoItem","deleteItem","newItem","_ref2","newTodoData","slice","push","_ref3","toggleProperty","_ref4","search","length","toLowerCase","indexOf","arr","propName","idx","findIndex","el","oldItem","objectSpread","defineProperty","toConsumableArray","_this$state","visibleItems","doneCount","todoCount","SearchPanel_SearchPAnel","visible","TodoPanel_default","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.3588d91f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.scss';\r\n\r\nexport default ({ toDo, done }) => {\r\n    return (\r\n        <h1 className=\"app-header d-flex align-items-center mb-4\">Список дел\r\n            <small\r\n                className=\"app-header__status text-muted ml-auto\">\r\n                {toDo} сделать,&nbsp;\r\n                {done} сделано\r\n            </small>\r\n        </h1>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default class ItemStatusFilter extends React.Component {\r\n  state = {\r\n    filter: '',\r\n  };\r\n\r\n  buttons = [\r\n    { name: 'all', text: 'Все' },\r\n    { name: 'active', text: 'активные' },\r\n    { name: 'done', text: 'сделано' },\r\n  ];\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n    const buttons = this.buttons.map(({ name, text }) => {\r\n      const isActive = filter === name;\r\n      const cls = isActive ? 'active' : '';\r\n      return (\r\n        <button\r\n          key={name}\r\n          type='button'\r\n          className={`btn btn-outline-primary ${cls}`}\r\n          onClick={() => onFilterChange(name)}\r\n        >\r\n          {text}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return <div className='input-group-append'>{buttons}</div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ItemStatusFilter from '../ItemStatusFilter';\r\n\r\nexport default class SearchPAnel extends Component {\r\n  state = {\r\n    term: '',\r\n  };\r\n\r\n  onSearchChange = (event) => {\r\n    const term = event.target.value;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='input-group mb-3'>\r\n        <input\r\n          className='search-panel form-control'\r\n          placeholder='search'\r\n          value={this.state.value}\r\n          onChange={this.onSearchChange}\r\n        />\r\n        <ItemStatusFilter filter={this.props.filter} onFilterChange={this.props.onFilterChange} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Todo.css';\r\nimport { BsTrash, BsExclamation } from 'react-icons/bs';\r\n\r\nexport default (props) => {\r\n    const {\r\n      done,\r\n      important,\r\n      label,\r\n      onDeleted,\r\n      onToggleImportant,\r\n      onToggleDone,\r\n    } = props;\r\n\r\n    let className = 'todo mr-auto';\r\n    if (done) {\r\n      className += ' done';\r\n    }\r\n    if (important) className += ' important';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <span className={className} onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n        <button\r\n          type='button'\r\n          className='btn btn-outline-success btn-sm ml-2'\r\n          onClick={onToggleImportant}\r\n        >\r\n          <BsExclamation />\r\n        </button>\r\n        <button\r\n          type='button'\r\n          className='btn btn-outline-danger btn-sm ml-2'\r\n          onClick={onDeleted}\r\n        >\r\n          <BsTrash size={16} />\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n","import React from 'react';\r\nimport Todo from '../Todo';\r\nimport './TodoList.css';\r\n\r\nexport default (props) => {\r\n  const { todos, onDeleted, onToggleDone, onToggleImportant } = props;\r\n\r\n  const items = todos.map((item) => {\r\n    let { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className='list-group-item list-group-item-action d-flex align-items-center'>\r\n        <Todo\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className='todo-list list-group list-group-flush mb-3'>{items}</ul>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nexport default class extends Component {\r\n  state = {\r\n    label: '',\r\n  };\r\n\r\n  onLabelChange = (event) => {\r\n    this.setState({\r\n      label: event.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.addTodo(this.state.label);\r\n    this.setState({\r\n      label: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className='input-group mb-3'>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='укажите TODO'\r\n            onChange={this.onLabelChange}\r\n            value={this.state.label}\r\n          />\r\n          <div className='input-group-append'>\r\n            <button className='btn btn btn-outline-secondary'>\r\n              добавить TODO\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport AppHeader from './AppHeader'\r\nimport SearchPanel from './SearchPanel'\r\nimport TodoList from './TodoList'\r\nimport TodoPanel from './TodoPanel'\r\n\r\nexport default class App extends React.Component {\r\n  nextId = 0\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Выпить кофе'),\r\n      this.createTodoItem('создать классное приложение'),\r\n      this.createTodoItem('пообедать')\r\n    ],\r\n    term: '',\r\n    filter: 'all' // all/active/done\r\n  }\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: ++this.nextId\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({todoData}) => {\r\n      // главный принцип - не измеенять текущий state, а возвращать новый!\r\n\r\n      // вариант-1\r\n      // const idx = todoData.findIndex((el) => el.id === id);\r\n      // const newTodoData = [\r\n      //     ...todoData.slice(0, idx),\r\n      //     ...todoData.slice(idx + 1)\r\n      // ];\r\n\r\n      // вариант-2\r\n      // const newTodoData = [...todoData]\r\n      // const item = newTodoData.findIndex((item) => item.id === id)\r\n      // newTodoData.splice(item, 1)\r\n\r\n      return {\r\n        // todoData: newTodoData\r\n        todoData: todoData.filter((item) => item.id !== id)\r\n      }\r\n    })\r\n  }\r\n\r\n  addTodo = (text) => {\r\n    const newItem = this.createTodoItem(text)\r\n    // add element in newTodoData\r\n    this.setState(({todoData}) => {\r\n      /**\r\n       *  Вариант-1\r\n       */\r\n      // добавить в конец массива\r\n      /* const newTodoData = [...todoData, newItem]; */\r\n      // добавить в начало массива\r\n      /* const newTodoData = [newItem, ...todoData]; */\r\n\r\n      /**\r\n       * Вариант-2 (мой)\r\n       */\r\n      const newTodoData = todoData.slice()\r\n      newTodoData.push(newItem)\r\n      return {\r\n        todoData: newTodoData\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    // 1. определить id эелемента\r\n    const idx = arr.findIndex((el) => el.id === id)\r\n    // 2. оновить нужный объект по (id) в массиве\r\n    const oldItem = arr[idx]\r\n    const newItem = {...oldItem, [propName]: !oldItem[propName]}\r\n    // 3. сконструировать вернуть новый массив\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)]\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      }\r\n    })\r\n  }\r\n  onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      }\r\n    })\r\n  }\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({term})\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({filter})\r\n  }\r\n\r\n  search = (items, term) => {\r\n    if (term.length === 0) return items\r\n    return items.filter(\r\n      (item) => item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n    )\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items\r\n      case 'active':\r\n        return items.filter((item) => !item.done)\r\n      case 'done':\r\n        return items.filter((item) => item.done)\r\n      default:\r\n        return items\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {todoData, term, filter} = this.state\r\n    const visibleItems = this.filter(this.search(todoData, term), filter)\r\n    const doneCount = todoData.filter((el) => el.done).length\r\n    const todoCount = todoData.length - doneCount\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-sm-9 col-md-7 col-lg-6 mx-auto'>\r\n            <AppHeader toDo={todoCount} done={doneCount} />\r\n            <SearchPanel\r\n              onSearchChange={this.onSearchChange}\r\n              filter={this.state.filter}\r\n              onFilterChange={this.onFilterChange}\r\n            />\r\n            <TodoList\r\n              todos={visibleItems}\r\n              onDeleted={this.deleteItem}\r\n              onToggleDone={this.onToggleDone}\r\n              onToggleImportant={this.onToggleImportant}\r\n              visible={this.state.visible}\r\n            />\r\n            <TodoPanel addTodo={this.addTodo} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}